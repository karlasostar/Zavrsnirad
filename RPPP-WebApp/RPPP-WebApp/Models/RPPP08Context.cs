// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace RPPP_WebApp.Models;

public partial class RPPP08Context : DbContext
{
    public RPPP08Context(DbContextOptions<RPPP08Context> options)
        : base(options)
    {
    }

    public virtual DbSet<Akgod> Akgods { get; set; }

    public virtual DbSet<Dvorana> Dvoranas { get; set; }

    public virtual DbSet<Fakultetsko> Fakultetskos { get; set; }

    public virtual DbSet<FinModul> FinModuls { get; set; }

    public virtual DbSet<NatjecajZaUpi> NatjecajZaUpis { get; set; }

    public virtual DbSet<OdlukeFv> OdlukeFvs { get; set; }

    public virtual DbSet<Osoba> Osobas { get; set; }

    public virtual DbSet<Povjerentsvo> Povjerentsvos { get; set; }

    public virtual DbSet<PredUlogaZap> PredUlogaZaps { get; set; }

    public virtual DbSet<Predavanje> Predavanjes { get; set; }

    public virtual DbSet<Predmet> Predmets { get; set; }

    public virtual DbSet<Prijava> Prijavas { get; set; }

    public virtual DbSet<Raspored> Rasporeds { get; set; }

    public virtual DbSet<Sjednica> Sjednicas { get; set; }

    public virtual DbSet<StatusNatjecaja> StatusNatjecajas { get; set; }

    public virtual DbSet<StatusPrijave> StatusPrijaves { get; set; }

    public virtual DbSet<StatusTran> StatusTrans { get; set; }

    public virtual DbSet<Strucno> Strucnos { get; set; }

    public virtual DbSet<Student> Students { get; set; }

    public virtual DbSet<TematskoPodrucje> TematskoPodrucjes { get; set; }

    public virtual DbSet<Transakcija> Transakcijas { get; set; }

    public virtual DbSet<UlogaNaPred> UlogaNaPreds { get; set; }

    public virtual DbSet<UlogaVijece> UlogaVijeces { get; set; }

    public virtual DbSet<VijeceUlogaZap> VijeceUlogaZaps { get; set; }

    public virtual DbSet<Vijeće> Vijećes { get; set; }

    public virtual DbSet<VrstaOdluke> VrstaOdlukes { get; set; }

    public virtual DbSet<VrstaSjednice> VrstaSjednices { get; set; }

    public virtual DbSet<Zaposlenik> Zaposleniks { get; set; }

    public virtual DbSet<ZavrsniRad> ZavrsniRads { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Akgod>(entity =>
        {
            entity.HasKey(e => e.IdAkGod).HasName("PK__AKGod__25348AA23A545D37");

            entity.ToTable("AKGod");

            entity.Property(e => e.IdAkGod).HasColumnName("idAkGod");
            entity.Property(e => e.Razdoblje)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("razdoblje");
        });

        modelBuilder.Entity<Dvorana>(entity =>
        {
            entity.HasKey(e => e.IdDvorana).HasName("PK__Dvorana__584BC5AE00776F54");

            entity.ToTable("Dvorana");

            entity.Property(e => e.IdDvorana).HasColumnName("idDvorana");
            entity.Property(e => e.Kapacitet).HasColumnName("kapacitet");
            entity.Property(e => e.OznDvorana)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("oznDvorana");
        });

        modelBuilder.Entity<Fakultetsko>(entity =>
        {
            entity.HasKey(e => e.IdVijeca).HasName("PK__Fakultet__F6F68FE9579F1A93");

            entity.ToTable("Fakultetsko");

            entity.Property(e => e.IdVijeca)
                .ValueGeneratedNever()
                .HasColumnName("id_vijeca");

            entity.HasOne(d => d.IdVijecaNavigation).WithOne(p => p.Fakultetsko)
                .HasForeignKey<Fakultetsko>(d => d.IdVijeca)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Fakultets__id_vi__178D7CA5");
        });

        modelBuilder.Entity<FinModul>(entity =>
        {
            entity.HasKey(e => e.IdFinModul).HasName("PK__FinModul__0E4FEAC81280F346");

            entity.ToTable("FinModul");

            entity.Property(e => e.IdFinModul).HasColumnName("idFinModul");
            entity.Property(e => e.VrstaModula)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("vrstaModula");
        });

        modelBuilder.Entity<NatjecajZaUpi>(entity =>
        {
            entity.HasKey(e => e.IdNatjecanja).HasName("PK__Natjecaj__44404AEDE93A2790");

            entity.ToTable("Natjecaj_za_upis");

            entity.Property(e => e.IdNatjecanja).HasColumnName("Id_natjecanja");
            entity.Property(e => e.BrojMjesta).HasColumnName("Broj_Mjesta");
            entity.Property(e => e.DatumOtvaranja).HasColumnName("Datum_Otvaranja");
            entity.Property(e => e.IdStatus).HasColumnName("id_status");

            entity.HasOne(d => d.IdStatusNavigation).WithMany(p => p.NatjecajZaUpis)
                .HasForeignKey(d => d.IdStatus)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Natjecaj___id_st__7167D3BD");

            entity.HasMany(d => d.IdUpisas).WithMany(p => p.IdNatjecanjas)
                .UsingEntity<Dictionary<string, object>>(
                    "NatjeceSe",
                    r => r.HasOne<Prijava>().WithMany()
                        .HasForeignKey("IdUpisa")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__natjeceSe__idUpi__3EA749C6"),
                    l => l.HasOne<NatjecajZaUpi>().WithMany()
                        .HasForeignKey("IdNatjecanja")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__natjeceSe__Id_na__3DB3258D"),
                    j =>
                    {
                        j.HasKey("IdNatjecanja", "IdUpisa").HasName("PK__natjeceS__8A743A52097FCA45");
                        j.ToTable("natjeceSe");
                        j.IndexerProperty<int>("IdNatjecanja").HasColumnName("Id_natjecanja");
                        j.IndexerProperty<int>("IdUpisa").HasColumnName("idUpisa");
                    });
        });

        modelBuilder.Entity<OdlukeFv>(entity =>
        {
            entity.HasKey(e => e.IdOdluke).HasName("PK__OdlukeFV__73B84A7148A1E9DC");

            entity.ToTable("OdlukeFV");

            entity.Property(e => e.IdOdluke).HasColumnName("idOdluke");
            entity.Property(e => e.DatumOdluke).HasColumnName("datumOdluke");
            entity.Property(e => e.IdRad).HasColumnName("id_rad");
            entity.Property(e => e.IdVrstaOdluke).HasColumnName("idVrstaOdluke");
            entity.Property(e => e.OpisOdluke)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("opisOdluke");

            entity.HasOne(d => d.IdRadNavigation).WithMany(p => p.OdlukeFvs)
                .HasForeignKey(d => d.IdRad)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__OdlukeFV__id_rad__4DE98D56");

            entity.HasOne(d => d.IdVrstaOdlukeNavigation).WithMany(p => p.OdlukeFvs)
                .HasForeignKey(d => d.IdVrstaOdluke)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__OdlukeFV__idVrst__4EDDB18F");

            entity.HasMany(d => d.IdVijecas).WithMany(p => p.IdOdlukes)
                .UsingEntity<Dictionary<string, object>>(
                    "DonosiOdluku",
                    r => r.HasOne<Fakultetsko>().WithMany()
                        .HasForeignKey("IdVijeca")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__donosiOdl__id_vi__52AE4273"),
                    l => l.HasOne<OdlukeFv>().WithMany()
                        .HasForeignKey("IdOdluke")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__donosiOdl__idOdl__51BA1E3A"),
                    j =>
                    {
                        j.HasKey("IdOdluke", "IdVijeca").HasName("PK__donosiOd__FCD7228F66ED970C");
                        j.ToTable("donosiOdluku");
                        j.IndexerProperty<int>("IdOdluke").HasColumnName("idOdluke");
                        j.IndexerProperty<int>("IdVijeca").HasColumnName("id_vijeca");
                    });
        });

        modelBuilder.Entity<Osoba>(entity =>
        {
            entity.HasKey(e => e.Oib).HasName("PK__Osoba__C2FFCF1159B0FFE4");

            entity.ToTable("Osoba");

            entity.Property(e => e.Oib)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("oib");
            entity.Property(e => e.BrojMobitela)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("brojMobitela");
            entity.Property(e => e.DatumRodenja).HasColumnName("Datum_Rodenja");
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("email");
            entity.Property(e => e.Iban)
                .IsRequired()
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("iban");
            entity.Property(e => e.Ime)
                .IsRequired()
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("ime");
            entity.Property(e => e.Prezime)
                .IsRequired()
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("prezime");

            entity.HasMany(d => d.IdFinModuls).WithMany(p => p.Oibs)
                .UsingEntity<Dictionary<string, object>>(
                    "Bira",
                    r => r.HasOne<FinModul>().WithMany()
                        .HasForeignKey("IdFinModul")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__bira__idFinModul__220B0B18"),
                    l => l.HasOne<Osoba>().WithMany()
                        .HasForeignKey("Oib")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__bira__oib__2116E6DF"),
                    j =>
                    {
                        j.HasKey("Oib", "IdFinModul").HasName("PK__bira__521B31BD1A2A4A9A");
                        j.ToTable("bira");
                        j.IndexerProperty<string>("Oib")
                            .HasMaxLength(20)
                            .IsUnicode(false)
                            .HasColumnName("oib");
                        j.IndexerProperty<int>("IdFinModul").HasColumnName("idFinModul");
                    });
        });

        modelBuilder.Entity<Povjerentsvo>(entity =>
        {
            entity.HasKey(e => e.IdVijeca).HasName("PK__Povjeren__F6F68FE9B99081BF");

            entity.ToTable("Povjerentsvo");

            entity.Property(e => e.IdVijeca)
                .ValueGeneratedNever()
                .HasColumnName("id_vijeca");
            entity.Property(e => e.IdVijecaStrucno).HasColumnName("id_vijeca_strucno");

            entity.HasOne(d => d.IdVijecaNavigation).WithOne(p => p.Povjerentsvo)
                .HasForeignKey<Povjerentsvo>(d => d.IdVijeca)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Povjerent__id_vi__1D4655FB");

            entity.HasOne(d => d.IdVijecaStrucnoNavigation).WithMany(p => p.Povjerentsvos)
                .HasForeignKey(d => d.IdVijecaStrucno)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Povjerent__id_vi__1E3A7A34");
        });

        modelBuilder.Entity<PredUlogaZap>(entity =>
        {
            entity.HasKey(e => new { e.IdPredUlogaZap, e.SifPredmet, e.Oib, e.UlogaId }).HasName("PK__PredUlog__A0C98A52CB1E7E08");

            entity.ToTable("PredUlogaZap");

            entity.Property(e => e.IdPredUlogaZap)
                .ValueGeneratedOnAdd()
                .HasColumnName("idPredUlogaZap");
            entity.Property(e => e.SifPredmet).HasColumnName("sifPredmet");
            entity.Property(e => e.Oib)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("oib");
            entity.Property(e => e.UlogaId).HasColumnName("uloga_id");

            entity.HasOne(d => d.OibNavigation).WithMany(p => p.PredUlogaZaps)
                .HasForeignKey(d => d.Oib)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__PredUlogaZa__oib__075714DC");

            entity.HasOne(d => d.SifPredmetNavigation).WithMany(p => p.PredUlogaZaps)
                .HasForeignKey(d => d.SifPredmet)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__PredUloga__sifPr__0662F0A3");

            entity.HasOne(d => d.Uloga).WithMany(p => p.PredUlogaZaps)
                .HasForeignKey(d => d.UlogaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__PredUloga__uloga__084B3915");
        });

        modelBuilder.Entity<Predavanje>(entity =>
        {
            entity.HasKey(e => e.IdPredavanja).HasName("PK__Predavan__7EEB8EB940FFF619");

            entity.ToTable("Predavanje");

            entity.Property(e => e.IdPredavanja).HasColumnName("idPredavanja");
            entity.Property(e => e.IdRaspored).HasColumnName("id_raspored");
            entity.Property(e => e.SifPredmet).HasColumnName("sifPredmet");
            entity.Property(e => e.VrijemePocetka)
                .HasColumnType("datetime")
                .HasColumnName("vrijemePocetka");
            entity.Property(e => e.VrijemeZavrsetka)
                .HasColumnType("datetime")
                .HasColumnName("vrijemeZavrsetka");

            entity.HasOne(d => d.IdRasporedNavigation).WithMany(p => p.Predavanjes)
                .HasForeignKey(d => d.IdRaspored)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Predavanj__id_ra__2B947552");

            entity.HasOne(d => d.SifPredmetNavigation).WithMany(p => p.Predavanjes)
                .HasForeignKey(d => d.SifPredmet)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Predavanj__sifPr__2C88998B");

            entity.HasMany(d => d.Oibs).WithMany(p => p.IdPredavanjas)
                .UsingEntity<Dictionary<string, object>>(
                    "Nosi",
                    r => r.HasOne<Zaposlenik>().WithMany()
                        .HasForeignKey("Oib")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__nosi__oib__4277DAAA"),
                    l => l.HasOne<Predavanje>().WithMany()
                        .HasForeignKey("IdPredavanja")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__nosi__idPredavan__4183B671"),
                    j =>
                    {
                        j.HasKey("IdPredavanja", "Oib").HasName("PK__nosi__72C472481D3B896C");
                        j.ToTable("nosi");
                        j.IndexerProperty<int>("IdPredavanja").HasColumnName("idPredavanja");
                        j.IndexerProperty<string>("Oib")
                            .HasMaxLength(20)
                            .IsUnicode(false)
                            .HasColumnName("oib");
                    });
        });

        modelBuilder.Entity<Predmet>(entity =>
        {
            entity.HasKey(e => e.SifPredmet).HasName("PK__Predmet__84B5E0644D0FB983");

            entity.ToTable("Predmet");

            entity.Property(e => e.SifPredmet).HasColumnName("sifPredmet");
            entity.Property(e => e.Ects).HasColumnName("ECTS");
            entity.Property(e => e.JelIzboran).HasColumnName("jelIzboran");
            entity.Property(e => e.Naziv)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("naziv");
            entity.Property(e => e.PlanProgram)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("planProgram");
            entity.Property(e => e.Program)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("program");
        });

        modelBuilder.Entity<Prijava>(entity =>
        {
            entity.HasKey(e => e.IdUpisa).HasName("PK__Prijava__E3470BFDCD83D0E4");

            entity.ToTable("Prijava");

            entity.Property(e => e.IdUpisa).HasColumnName("idUpisa");
            entity.Property(e => e.BrUpisa).HasColumnName("brUpisa");
            entity.Property(e => e.DatumUpisa).HasColumnName("datumUpisa");
            entity.Property(e => e.IdPrijave).HasColumnName("idPrijave");
            entity.Property(e => e.RokTrajanja).HasColumnName("rokTrajanja");
            entity.Property(e => e.StatusUpisa)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("statusUpisa");

            entity.HasOne(d => d.IdPrijaveNavigation).WithMany(p => p.Prijavas)
                .HasForeignKey(d => d.IdPrijave)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Prijava__idPrija__24E777C3");

            entity.HasMany(d => d.SifPredmets).WithMany(p => p.IdUpisas)
                .UsingEntity<Dictionary<string, object>>(
                    "UpisujePredmet",
                    r => r.HasOne<Predmet>().WithMany()
                        .HasForeignKey("SifPredmet")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__upisujePr__sifPr__46486B8E"),
                    l => l.HasOne<Prijava>().WithMany()
                        .HasForeignKey("IdUpisa")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__upisujePr__idUpi__45544755"),
                    j =>
                    {
                        j.HasKey("IdUpisa", "SifPredmet").HasName("PK__upisujeP__BB0C55FB95D42E1F");
                        j.ToTable("upisujePredmet");
                        j.IndexerProperty<int>("IdUpisa").HasColumnName("idUpisa");
                        j.IndexerProperty<int>("SifPredmet").HasColumnName("sifPredmet");
                    });
        });

        modelBuilder.Entity<Raspored>(entity =>
        {
            entity.HasKey(e => e.IdRaspored).HasName("PK__Raspored__9509AE6CC8A326CC");

            entity.ToTable("Raspored");

            entity.Property(e => e.IdRaspored).HasColumnName("id_raspored");
            entity.Property(e => e.IdAkGod).HasColumnName("idAkGod");
            entity.Property(e => e.IdDvorana).HasColumnName("idDvorana");
            entity.Property(e => e.Opis)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("opis");

            entity.HasOne(d => d.IdAkGodNavigation).WithMany(p => p.Rasporeds)
                .HasForeignKey(d => d.IdAkGod)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Raspored__idAkGo__27C3E46E");

            entity.HasOne(d => d.IdDvoranaNavigation).WithMany(p => p.Rasporeds)
                .HasForeignKey(d => d.IdDvorana)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Raspored__idDvor__28B808A7");
        });

        modelBuilder.Entity<Sjednica>(entity =>
        {
            entity.HasKey(e => e.IdSjednica).HasName("PK__Sjednica__6246AAA8DEA3A35C");

            entity.ToTable("Sjednica");

            entity.Property(e => e.IdSjednica).HasColumnName("id_sjednica");
            entity.Property(e => e.DatumSjednice).HasColumnName("datumSjednice");
            entity.Property(e => e.IdDvorana).HasColumnName("idDvorana");
            entity.Property(e => e.IdVijeca).HasColumnName("id_vijeca");
            entity.Property(e => e.IdVrsteSjednice).HasColumnName("id_vrsteSjednice");
            entity.Property(e => e.RBr).HasColumnName("rBr");

            entity.HasOne(d => d.IdDvoranaNavigation).WithMany(p => p.Sjednicas)
                .HasForeignKey(d => d.IdDvorana)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Sjednica__idDvor__314D4EA8");

            entity.HasOne(d => d.IdVijecaNavigation).WithMany(p => p.Sjednicas)
                .HasForeignKey(d => d.IdVijeca)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Sjednica__id_vij__2F650636");

            entity.HasOne(d => d.IdVrsteSjedniceNavigation).WithMany(p => p.Sjednicas)
                .HasForeignKey(d => d.IdVrsteSjednice)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Sjednica__id_vrs__30592A6F");
        });

        modelBuilder.Entity<StatusNatjecaja>(entity =>
        {
            entity.HasKey(e => e.IdStatus).HasName("PK__StatusNa__5D2DC6E85F2AB61B");

            entity.ToTable("StatusNatjecaja");

            entity.Property(e => e.IdStatus).HasColumnName("id_status");
            entity.Property(e => e.StatusNatjecanja)
                .IsRequired()
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("statusNatjecanja");
        });

        modelBuilder.Entity<StatusPrijave>(entity =>
        {
            entity.HasKey(e => e.IdPrijave).HasName("PK__StatusPr__934D57CD6C46DDFD");

            entity.ToTable("StatusPrijave");

            entity.Property(e => e.IdPrijave).HasColumnName("idPrijave");
            entity.Property(e => e.StatusPrijave1)
                .IsRequired()
                .HasMaxLength(40)
                .IsUnicode(false)
                .HasColumnName("statusPrijave");
        });

        modelBuilder.Entity<StatusTran>(entity =>
        {
            entity.HasKey(e => e.IdStatus).HasName("PK__Status_t__01936F74E991927A");

            entity.ToTable("Status_trans");

            entity.Property(e => e.IdStatus).HasColumnName("idStatus");
            entity.Property(e => e.StatusTrans)
                .IsRequired()
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("statusTrans");
        });

        modelBuilder.Entity<Strucno>(entity =>
        {
            entity.HasKey(e => e.IdVijeca).HasName("PK__Strucno__F6F68FE99A808DF3");

            entity.ToTable("Strucno");

            entity.Property(e => e.IdVijeca)
                .ValueGeneratedNever()
                .HasColumnName("id_vijeca");

            entity.HasOne(d => d.IdVijecaNavigation).WithOne(p => p.Strucno)
                .HasForeignKey<Strucno>(d => d.IdVijeca)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Strucno__id_vije__1A69E950");
        });

        modelBuilder.Entity<Student>(entity =>
        {
            entity.HasKey(e => new { e.Oib, e.IdUpisa }).HasName("PK__Student__0CCBBFAEC9E80047");

            entity.ToTable("Student");

            entity.HasIndex(e => e.Jmbag, "UQ__Student__FA2137AAEB39A639").IsUnique();

            entity.Property(e => e.Oib)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("oib");
            entity.Property(e => e.IdUpisa)
                .ValueGeneratedOnAdd()
                .HasColumnName("idUpisa");
            entity.Property(e => e.Jmbag)
                .IsRequired()
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("JMBAG");
            entity.Property(e => e.OibMentora)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("oib_mentora");

            entity.HasOne(d => d.IdUpisaNavigation).WithMany(p => p.Students)
                .HasForeignKey(d => d.IdUpisa)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Student__idUpisa__39E294A9");

            entity.HasOne(d => d.OibNavigation).WithMany(p => p.Students)
                .HasForeignKey(d => d.Oib)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Student__oib__38EE7070");

            entity.HasOne(d => d.OibMentoraNavigation).WithMany(p => p.Students)
                .HasForeignKey(d => d.OibMentora)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Student__oib_men__3AD6B8E2");
        });

        modelBuilder.Entity<TematskoPodrucje>(entity =>
        {
            entity.HasKey(e => e.IdTematskogPodrucja).HasName("PK__Tematsko__E4906E9A83997A93");

            entity.ToTable("TematskoPodrucje");

            entity.Property(e => e.IdTematskogPodrucja).HasColumnName("idTematskogPodrucja");
            entity.Property(e => e.TematskoPodrucje1)
                .IsRequired()
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("tematskoPodrucje");
        });

        modelBuilder.Entity<Transakcija>(entity =>
        {
            entity.HasKey(e => e.IdTransakcije).HasName("PK__Transakc__33A5BCE2D6B1EF64");

            entity.ToTable("Transakcija");

            entity.Property(e => e.IdTransakcije).HasColumnName("idTransakcije");
            entity.Property(e => e.BrRata).HasColumnName("brRata");
            entity.Property(e => e.IdStatus).HasColumnName("idStatus");
            entity.Property(e => e.Iznos).HasColumnName("iznos");
            entity.Property(e => e.Oib)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("oib");
            entity.Property(e => e.RacunPosiljatelja)
                .IsRequired()
                .HasMaxLength(40)
                .IsUnicode(false)
                .HasColumnName("racunPosiljatelja");
            entity.Property(e => e.RacunPrimatelja)
                .IsRequired()
                .HasMaxLength(40)
                .IsUnicode(false)
                .HasColumnName("racunPrimatelja");
            entity.Property(e => e.VrijemeTranskacije)
                .HasColumnType("datetime")
                .HasColumnName("vrijemeTranskacije");

            entity.HasOne(d => d.IdStatusNavigation).WithMany(p => p.Transakcijas)
                .HasForeignKey(d => d.IdStatus)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Transakci__idSta__351DDF8C");

            entity.HasOne(d => d.OibNavigation).WithMany(p => p.Transakcijas)
                .HasForeignKey(d => d.Oib)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Transakcija__oib__3429BB53");
        });

        modelBuilder.Entity<UlogaNaPred>(entity =>
        {
            entity.HasKey(e => e.UlogaId).HasName("PK__UlogaNaP__03C8E0D87C1AA50E");

            entity.ToTable("UlogaNaPred");

            entity.Property(e => e.UlogaId).HasColumnName("uloga_id");
            entity.Property(e => e.UlogaNaziv)
                .IsRequired()
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("uloga_naziv");
        });

        modelBuilder.Entity<UlogaVijece>(entity =>
        {
            entity.HasKey(e => e.IdUlogaVijece).HasName("PK__ulogaVij__29A83D451029C94B");

            entity.ToTable("ulogaVijece");

            entity.Property(e => e.IdUlogaVijece).HasColumnName("id_UlogaVijece");
            entity.Property(e => e.NazivUlogaVijece)
                .IsRequired()
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("nazivUlogaVijece");
        });

        modelBuilder.Entity<VijeceUlogaZap>(entity =>
        {
            entity.HasKey(e => new { e.IdVijeceulogazap, e.IdVijeca, e.IdUlogaVijece, e.Oib }).HasName("PK__VijeceUl__EA27AD2ACDAE16FF");

            entity.ToTable("VijeceUlogaZap");

            entity.Property(e => e.IdVijeceulogazap)
                .ValueGeneratedOnAdd()
                .HasColumnName("id_vijeceulogazap");
            entity.Property(e => e.IdVijeca).HasColumnName("id_vijeca");
            entity.Property(e => e.IdUlogaVijece).HasColumnName("id_UlogaVijece");
            entity.Property(e => e.Oib)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("oib");

            entity.HasOne(d => d.IdUlogaVijeceNavigation).WithMany(p => p.VijeceUlogaZaps)
                .HasForeignKey(d => d.IdUlogaVijece)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__VijeceUlo__id_Ul__0E04126B");

            entity.HasOne(d => d.IdVijecaNavigation).WithMany(p => p.VijeceUlogaZaps)
                .HasForeignKey(d => d.IdVijeca)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__VijeceUlo__id_vi__0D0FEE32");

            entity.HasOne(d => d.OibNavigation).WithMany(p => p.VijeceUlogaZaps)
                .HasForeignKey(d => d.Oib)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__VijeceUloga__oib__0EF836A4");
        });

        modelBuilder.Entity<Vijeće>(entity =>
        {
            entity.HasKey(e => e.IdVijeca).HasName("PK__Vijeće__F6F68FE958D4D412");

            entity.ToTable("Vijeće");

            entity.Property(e => e.IdVijeca).HasColumnName("id_vijeca");
            entity.Property(e => e.IdAkGod).HasColumnName("idAkGod");

            entity.HasOne(d => d.IdAkGodNavigation).WithMany(p => p.Vijećes)
                .HasForeignKey(d => d.IdAkGod)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Vijeće__idAkGod__762C88DA");
        });

        modelBuilder.Entity<VrstaOdluke>(entity =>
        {
            entity.HasKey(e => e.IdVrstaOdluke).HasName("PK__VrstaOdl__E92D560C55B96CDE");

            entity.ToTable("VrstaOdluke");

            entity.Property(e => e.IdVrstaOdluke).HasColumnName("idVrstaOdluke");
            entity.Property(e => e.VrstaOdluke1)
                .IsRequired()
                .HasMaxLength(150)
                .IsUnicode(false)
                .HasColumnName("vrstaOdluke");
        });

        modelBuilder.Entity<VrstaSjednice>(entity =>
        {
            entity.HasKey(e => e.IdVrsteSjednice).HasName("PK__VrstaSje__22811E13652DF90B");

            entity.ToTable("VrstaSjednice");

            entity.Property(e => e.IdVrsteSjednice).HasColumnName("id_vrsteSjednice");
            entity.Property(e => e.NazivVrsteSjednice)
                .IsRequired()
                .HasMaxLength(35)
                .IsUnicode(false)
                .HasColumnName("nazivVrsteSjednice");
        });

        modelBuilder.Entity<Zaposlenik>(entity =>
        {
            entity.HasKey(e => e.Oib).HasName("PK__Zaposlen__C2FFCF110E74C675");

            entity.ToTable("Zaposlenik");

            entity.HasIndex(e => e.IdClan, "UQ__Zaposlen__6FA7836B8EF08E55").IsUnique();

            entity.Property(e => e.Oib)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("oib");
            entity.Property(e => e.IdClan)
                .ValueGeneratedOnAdd()
                .HasColumnName("id_clan");

            entity.HasOne(d => d.OibNavigation).WithOne(p => p.Zaposlenik)
                .HasForeignKey<Zaposlenik>(d => d.Oib)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Zaposlenik__oib__019E3B86");
        });

        modelBuilder.Entity<ZavrsniRad>(entity =>
        {
            entity.HasKey(e => e.IdRad).HasName("PK__ZavrsniR__6ABE0F8EE46AD02B");

            entity.ToTable("ZavrsniRad");

            entity.Property(e => e.IdRad).HasColumnName("id_rad");
            entity.Property(e => e.DatumObrane).HasColumnName("datumObrane");
            entity.Property(e => e.IdTematskogPodrucja).HasColumnName("idTematskogPodrucja");
            entity.Property(e => e.IdUpisa).HasColumnName("idUpisa");
            entity.Property(e => e.IdVijeca).HasColumnName("id_vijeca");
            entity.Property(e => e.Metodologija)
                .IsRequired()
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("metodologija");
            entity.Property(e => e.Naslov)
                .IsRequired()
                .HasMaxLength(150)
                .IsUnicode(false)
                .HasColumnName("naslov");
            entity.Property(e => e.Ocjena).HasColumnName("ocjena");
            entity.Property(e => e.Oib)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("oib");
            entity.Property(e => e.Opis)
                .IsRequired()
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("opis");
            entity.Property(e => e.Sazetak)
                .IsRequired()
                .HasMaxLength(400)
                .IsUnicode(false)
                .HasColumnName("sazetak");
            entity.Property(e => e.Tema)
                .IsRequired()
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("tema");

            entity.HasOne(d => d.IdTematskogPodrucjaNavigation).WithMany(p => p.ZavrsniRads)
                .HasForeignKey(d => d.IdTematskogPodrucja)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__ZavrsniRa__idTem__4924D839");

            entity.HasOne(d => d.IdVijecaNavigation).WithMany(p => p.ZavrsniRads)
                .HasForeignKey(d => d.IdVijeca)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__ZavrsniRa__id_vi__4B0D20AB");

            entity.HasOne(d => d.Student).WithMany(p => p.ZavrsniRads)
                .HasForeignKey(d => new { d.Oib, d.IdUpisa })
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__ZavrsniRad__4A18FC72");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}